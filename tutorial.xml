<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="Tutorial App" height="250">
    <Link rel="mediumIcon" href="g38.png" />
    <Link rel="icon" href="g20.png" />
    <Require feature="wave" />
    <Require feature="dynamic-height"/>
    <Require feature="minimessage"/>
  </ModulePrefs>
  <Content type="html">
    <![CDATA[
        <script type="text/javascript">
          function addInput(){
            var state = wave.getState();
            var jsonString = state.get('topics','[]');
            var topics = toObject(jsonString);
            topics.push(document.getElementById('textBox').value);
            document.getElementById('textBox').value = '';
            var jsonString = toJSON(topics);
            var votes = toObject(state.get('votes','[]'));
            votes.push(new Array());
            state.submitDelta({'topics' : toJSON(topics), 'votes' : toJSON(votes)});
          }
          
          function vote(topicId){
            var state = wave.getState();
            var viewerId = wave.getViewer().getId();
            var votes = toObject(state.get('votes'));
            if(votes[topicId].indexOf(viewerId) == -1){
              votes[topicId].push(viewerId);
              state.submitDelta({'votes' : toJSON(votes)});              
            }else{
              var message = new gadgets.MiniMessage(__MODULE_ID__);
              message.createDismissibleMessage("Cannot vote for the same topic more than once!");
              gadgets.window.adjustHeight();
            }
          }          
          
          function renderInfo() {
            if (!wave.getState()) {
              return;
            }
            
            var state = wave.getState();
            var topics = toObject(state.get('topics','[]'));
            var votes = toObject(state.get('votes','[]'));
            var voterIds = [];
            
            var html = "";
            for (var i = 0; i < topics.length; i++){
              var id = "topic"+i;
              html += '<div class="topic"><h4> ' + topics[i] + '</h4></div>';
              for (var j = 0; !(typeof votes[i] === 'undefined') && j < votes[i].length; j++){
                if (voterIds.indexOf(votes[i][j]) == -1){
                  voterIds.push(votes[i][j]);
                }
                var voter = wave.getParticipantById(votes[i][j]);
                var thumbnail = voter.getThumbnailUrl();
                var name = voter.getDisplayName();
                html += '<img id = "thumbnail" title="'+name+'" src="'+thumbnail+'"/>'
              }
              html += '<button id="voteButton" onclick="vote('+i+')">+</button>';
            }
            document.getElementById('body').innerHTML = html;  
            
            var participantsCount = wave.getParticipants().length;
            var votersCount = voterIds.length;
            html="";
            if(topics.length > 1){
              html+='<h6>'+votersCount+' out of '+participantsCount+' voted. </h6>'
            }
            html+='<input type="text" id="textBox" value=""/><button id="addInput" onclick="addInput()">Add</button>'
            document.getElementById('footer').innerHTML = html;
            gadgets.window.adjustHeight();
          }
 
          // Encode object as JSON string
          function toJSON(obj) { 
            return gadgets.json.stringify(obj); 
          }
 
          // Convert JSON string into an object
          function toObject(str) {
            return gadgets.json.parse(str);
          }
 
          function init() {
            if (wave && wave.isInWaveContainer()) {
              wave.setStateCallback(renderInfo);
              wave.setParticipantCallback(renderInfo);
            }
          }
 
          gadgets.util.registerOnLoadHandler(init);        
        </script>
 
        <div id="app">
          <div id="header"><h2>Opensocial Tutorial Tool</h2></div>
          <div id="body"></div>
          <div id="footer"></div>
        </div>
        
        <style type="text/css">
          #app {line-height: 20px;border: 1px solid #EEEEEE;}
          #header {padding-top: 10px;padding-bottom: 10px;margin-left: auto;margin-right: auto;width: 40%;color: #5c5c5c;}
          #body {color: #5c5c5c;padding-left: 30px;}
          #footer {padding: 30px;}
          #voteButton {width: 40px;height: 40px;padding: 2px;vertical-align:middle;}
          #thumbnail {width: 40px;height: 40px;padding: 2px;vertical-align:middle;}
        </style>
      ]]>
  </Content>
</Module>